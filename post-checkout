#!/usr/bin/env ruby

require 'yaml'

# If this was a branch checkout
if ARGV[2] == '1'
  def dump(database_name, branch_name)
    print "Dumping #{database_name}..."

    if system(%[pg_dump -c -f "#{@dump_folder}/#{database_name}-#{branch_name}" #{database_name}])
      print "done!\n"
      true
    else
      print "failed!\n"
      false
    end
  end

  def branch_from_refhead(ref)
    `git show-ref --heads | grep #{ref} | awk '{print $2}'`.strip.sub(/^refs\/heads\//, '')
  end

  # Get the source and destination branches
  @source_branch = branch_from_refhead(ARGV[0])
  @destination_branch = branch_from_refhead(ARGV[1])

  @project_root = %x[git rev-parse --show-toplevel].strip
  @dump_folder = "#{@project_root}/.db_branch_dumps"

  # Load Rails DB config and grab database name
  rails_db_config = YAML.load_file("#{@project_root}/config/database.yml")
  database_names = {
    'development' => rails_db_config['development']['database'],
    'test'        => rails_db_config['test']['database']
  }

  # Ensure dump directory exists
  unless Dir.exists?(@dump_folder)
    Dir.mkdir @dump_folder
  end

  # Don't do anything if the source and destination branches are the same
  unless @source_branch == @destination_branch
    # Dump databases for source branch
    if database_names.all? { |env, database_name| dump(database_name, @source_branch) }
      database_names.each do |env, database_name|
        # Restore dumps from this branch, if they exist
        dump_path = "#{@dump_folder}/#{database_name}-#{@destination_branch}"

        if File.exists?(dump_path)
          print "Restoring #{database_name} to its previous state on this branch..."

          if system(%[psql #{database_name} < #{dump_path} > /dev/null])
            print "done!\n"
          else
            print "failed!\n"
          end
        else
          print "No DB dump for #{database_name} on the '#{@destination_branch}' branch was found!\n"
          print "The state of your database has been saved for when you return to the '#{@source_branch}' branch, but its current state has been left unchanged.  You are now free to make changes to it that are specific to this branch, and they will be saved when you checkout a different branch, then restored when you checkout this one again.\n"
        end
      end
    else
      print "Failed to dump all databases. Halting.\n"
    end
  end
end
